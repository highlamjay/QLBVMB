<UserControl x:Class="QLBVMB.User_control.ControlBarUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QLBVMB.User_control"
             
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             
             Name="ucControlBar"
             mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction Command="{Binding MouseMoveWindowCommand}" CommandParameter="{Binding ElementName=ucControlBar}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <materialDesign:ColorZone Mode="PrimaryLight" >
            <DockPanel>
                <StackPanel DockPanel.Dock="Right"  Background="Transparent" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button" x:Key="button1">
                            <Setter Property="Margin" Value="0"></Setter>
                            <Setter Property="Width" Value="40"></Setter>
                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="LightSkyBlue" TargetName="Border" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="Button" x:Key="button2">
                            <Setter Property="Margin" Value="0"></Setter>
                            <Setter Property="Width" Value="40"></Setter>
                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Red" TargetName="Border"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <Button x:Name="btControlBarMin"
                        Style="{StaticResource button1}"
                        Command="{Binding MinimizeWindowCommand}" 
                        CommandParameter="{Binding ElementName=ucControlBar}"
                        ToolTip="Minimize" ToolBar.OverflowMode="AsNeeded">
                        <materialDesign:PackIcon Kind="WindowMinimize" />
                    </Button>
                    <Button x:Name="btControlBarMax"
                        Style="{StaticResource button1}"
                        Command="{Binding MaximizeWindowCommand}" 
                        CommandParameter="{Binding ElementName=ucControlBar}"
                        ToolTip="Maximize" ToolBar.OverflowMode="AsNeeded">
                        <materialDesign:PackIcon Kind="WindowMaximize" />
                    </Button>
                    <Button x:Name="btControlBarClose"
                        Style="{StaticResource button2}"
                        Command="{Binding CloseWindowCommand}" 
                        CommandParameter="{Binding ElementName=ucControlBar}"
                        ToolTip="Close" ToolBar.OverflowMode="AsNeeded">
                        <materialDesign:PackIcon Kind="WindowClose" />
                    </Button>
                </StackPanel>

                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                    <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                    <TextBlock VerticalAlignment="Center" Margin="16 0 0 0" Text="{Binding Tag, ElementName=ucControlBar}"></TextBlock>
                </StackPanel>
            </DockPanel>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>
